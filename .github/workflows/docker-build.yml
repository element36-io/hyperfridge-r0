name: Docker Build

on:
  push:
    branches: [ main, web3review ]

  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest  # , l5, self-hosted
    permissions:
      contents: write
    steps:
    - name: Check out code
      uses: actions/checkout@v3
    
    - name:  Dry-run of Bump version and push tag, Minor version for each merge
      if: github.event_name == 'pull_request'
      uses: anothrNick/github-tag-action@1.64.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        WITH_V: true
        DEFAULT_BUMP: patch
        DRY_RUN: true
        VERBOSE: true
        INITIAL_VERSION: 0.1.0
        
    - name:  Bump version and push tag, Minor version for each merge
      if: github.event_name != 'pull_request'
      uses: anothrNick/github-tag-action@1.64.0
      id: taggerRun
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        WITH_V: true
        DEFAULT_BUMP: patch
        
    - name: echo tag
      if: github.event_name != 'pull_request'
      run: |
        echo "The current tag is: ${{ steps.taggerRun.outputs.new_tag }}"

    - name: echo part
      if: github.event_name != 'pull_request'
      run: |
        echo "The version increment was: ${{ steps.taggerRun.outputs.part }}"

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2 

    - name: Login to DockerHub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker image (manual)
      run: |
        docker buildx build --build-arg PLATFORM=linux/amd64 --load -t e36io/hyperfridge-r0:${{ github.run_id }} .
  
    - name: Create and Run Temporary Container
      run: |
        docker create --name temp-container e36io/hyperfridge-r0:${{ github.run_id }}
        docker cp temp-container:/app/IMAGE_ID.hex ./IMAGE_ID.hex
        docker cp temp-container:/app ./app
        docker cp temp-container:/data ./data
        docker rm temp-container

    - name: Read the Image Tag
      id: read_tag
      run: echo "IMAGE_TAG=$(cat IMAGE_ID.hex)" >> $GITHUB_ENV        

    - name: Zip App and Data Directories to create a release
      if: github.event_name != 'pull_request'
      run: |
        zip -r hyperfridge-${{ env.IMAGE_TAG }}-${{ steps.taggerRun.outputs.new_tag }}.zip ./app ./data
        
    - name: Create GitHub Release with zipped binaries
      if: github.event_name != 'pull_request'
      run: |
          gh release create ${{ steps.taggerRun.outputs.new_tag }}-${{ env.IMAGE_TAG }} hyperfridge-${{ env.IMAGE_TAG }}-${{ steps.taggerRun.outputs.new_tag }}.zip --title "Release Version ${{ steps.taggerRun.outputs.new_tag }} Image ID:${{ env.IMAGE_TAG }}"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Push Docker image to Docker Hub with additional tags
      run: |
        docker tag e36io/hyperfridge-r0:${{ github.run_id }} e36io/hyperfridge-r0:${{ steps.taggerRun.outputs.new_tag }}-${{ env.IMAGE_TAG }}
        docker push e36io/hyperfridge-r0:${{ steps.taggerRun.outputs.new_tag }}-${{ env.IMAGE_TAG }}
        docker tag e36io/hyperfridge-r0:${{ github.run_id }} e36io/hyperfridge-r0:latest
        docker push e36io/hyperfridge-r0:latest